package @@package@@

import java.net.InetAddress
import io.github.benwhitehead.finch.FinchServer
import com.twitter.finagle.param.Stats
import com.twitter.finagle.{Http, ListeningServer}
import com.twitter.finagle.stats.{LoadedStatsReceiver, StatsReceiver}
import com.twitter.server.util.{JvmStats, TwitterStats}
import com.twitter.util.Await
import maiden.util.async.AsyncOps
import maiden.util.error.ErrorReporter._
import maiden.util.log.Logger._
import maiden.config.MaidenConfig
import @@appNameUpper@@Api._


object @@appNameUpper@@Boot extends FinchServer {

  lazy val systemId = MaidenConfig.get[String]("app.id")
  lazy val port = MaidenConfig.get[Int]("app.port")
  lazy val environment = MaidenConfig.get[String]("app.environment")

  override lazy val serverName = InetAddress.getLocalHost.getHostName



  lazy val server: ListeningServer = Http.server
    .withLabel(systemId)
    .configured(Stats(LoadedStatsReceiver))
    .serve(s":${port}", apiService)


  def service = apiService

  private def registerMetricsAndMonitoring(): Unit = {
    errorReporter.registerForUnhandledExceptions()
    JvmStats.register(LoadedStatsReceiver)
    TwitterStats.register(LoadedStatsReceiver)
  }
}